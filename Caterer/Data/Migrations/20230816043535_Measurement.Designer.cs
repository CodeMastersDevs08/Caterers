// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Caterer.Data;

#nullable disable

namespace Caterer.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230816043535_Measurement")]
    partial class Measurement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("POS_Infotech.Models.Accessrights", b =>
                {
                    b.Property<int>("AccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessId"), 1L, 1);

                    b.Property<string>("Access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AccessLogsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddChargeTaxFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddonAppsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("AdvanceReports")
                        .HasColumnType("bit");

                    b.Property<bool?>("AlternativeCurrencyFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("AssignEmployeeFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("AssignTableFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("AvailableInventoryFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("BOReceiptsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("BackdateInventoryFullAccess")
                        .HasColumnType("bit");

                    b.Property<string>("Backoffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CashDrawerReportFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CashManagementFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CashRefundsVreditNotesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CashierDailySalesReportFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CategoriesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CategoryFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CategoryReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("CategoryWiseSalesReportFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ChargesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ClearCartFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CreateOrderFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CreateReservationFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CreditSettlementsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CreditorsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CustomerBaseFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("Customers")
                        .HasColumnType("bit");

                    b.Property<bool?>("CustomersFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("CustomersReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("DashboardFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("DebtorManagementFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("DeletedReceiptsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("DesignReceiptFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("DiscountsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("DrawerReasonsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("EcommerceSalesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("Functions")
                        .HasColumnType("bit");

                    b.Property<bool?>("GoodReceivedNotesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("HSNCodesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inventory")
                        .HasColumnType("bit");

                    b.Property<bool?>("InventoryCountsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("InventoryExpiryReportFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("InventoryHistoryReportFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("InventoryValuationReportFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("InvoiceFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("KOTBOTNotesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("LiveChat")
                        .HasColumnType("bit");

                    b.Property<bool?>("LoyaltyFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManageCustomer")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManageInventory")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManageProducts")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManagePromotions")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManageSettings")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManageUsers")
                        .HasColumnType("bit");

                    b.Property<bool?>("MeasurementsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ModifiersFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("NoOfEmployees")
                        .HasColumnType("bit");

                    b.Property<bool?>("NotificationSettingsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("OpenDrawerFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("OrderTypeWiseSalesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("OrderTypesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("OtherStaffFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PastReceiptsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PaymentGatewayFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PaymentTypesFullAccess")
                        .HasColumnType("bit");

                    b.Property<string>("Pos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PosGoodReceivedNotesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PosGoodReceivedNotesReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("PosReports")
                        .HasColumnType("bit");

                    b.Property<bool?>("PosStockAdjustmentFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PosStockAdjustmentReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("PosTransferOfGoodsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PosTransferOfGoodsReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrebillFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PriceChangeFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PricingPlansFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrintLabelsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrintersFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductSalesByOtherStaffFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductWiseOrdersFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductWiseReceiptsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductWiseSalesReportFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductWiseTaxReportFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductionsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("Products")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductsConsumedByOtherStaffFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductwiseDeletedRreceiptsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PurchaseOrdersFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("PurchaseOrdersTemporarySave")
                        .HasColumnType("bit");

                    b.Property<bool?>("QROrderingFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("QuickbookIntegrationFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReceiptsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("RefundFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("Reports")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReportsChargesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReportsTaxesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("Sales")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesByCategoryFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesByDiscountsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesByModifiersFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesByOrdersFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesByOtherStaffFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesByPaymentTypesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesByProductsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesByTrendFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesReportFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesSummaryFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("Settings")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShiftsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowMyOpenBillsOnlyFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SoftwareCustomizationFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SoftwareCustomizationReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("SoftwareSetupFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("StaffCommissionsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("StockAdjustmentsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("StockSummaryReportFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupervisorFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SuppliersFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SuspiciousReports")
                        .HasColumnType("bit");

                    b.Property<bool?>("SyncFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("TableRoomFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("TabletUsersManageUsers")
                        .HasColumnType("bit");

                    b.Property<bool?>("TaxGroupsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("TaxesFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("TimecardsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("TipsFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("TotalHoursWorkedFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("TransferOfGoodsFullAccess")
                        .HasColumnType("bit");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ViewPendingOrderFullAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("WeightEmbeddedBarcodesFullAccess")
                        .HasColumnType("bit");

                    b.HasKey("AccessId");

                    b.ToTable("Accessright");
                });

            modelBuilder.Entity("POS_Infotech.Models.AddCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachToShops")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreditLimit")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Loyaltyprogram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("PostalCodeRegion")
                        .HasColumnType("bigint");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AddCustomers");
                });

            modelBuilder.Entity("POS_Infotech.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"), 1L, 1);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BrandId");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("POS_Infotech.Models.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SubCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("MainCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("POS_Infotech.Models.Measurement", b =>
                {
                    b.Property<int>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasurementId"), 1L, 1);

                    b.Property<string>("MeasurementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MeasurementId");

                    b.ToTable("Measurement");
                });

            modelBuilder.Entity("POS_Infotech.Models.Modifier", b =>
                {
                    b.Property<int>("ModifierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModifierId"), 1L, 1);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal");

                    b.Property<string>("ModifierGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal");

                    b.HasKey("ModifierId");

                    b.ToTable("Modifier");
                });

            modelBuilder.Entity("POS_Infotech.Models.posdevice", b =>
                {
                    b.Property<int>("PosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosId"), 1L, 1);

                    b.Property<string>("PosName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminalKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PosId");

                    b.ToTable("posdevice");
                });

            modelBuilder.Entity("POS_Infotech.Models.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("AddValue")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AdditionalOptions")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Barcode")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("Decimal");

                    b.Property<string>("ExistingOptions")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Instock")
                        .HasColumnType("int");

                    b.Property<string>("ModifierInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("Decimal");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("QuantityForCombo")
                        .HasColumnType("Decimal");

                    b.Property<int?>("SafetyStock")
                        .HasColumnType("int");

                    b.Property<string>("SelectedBrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedCategory")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SelectedProduct")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SelectedShopName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SelectedVariantOption")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SelectedVariantValue")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SetName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("Decimal");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("Decimal");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.Property<int>("productcode")
                        .HasColumnType("int");

                    b.Property<string>("soldbyeach")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("POS_Infotech.Models.Shop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfPos")
                        .HasColumnType("int");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferLocation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShopId");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("POS_Infotech.Models.ShopDropdownViewModel", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfPos")
                        .HasColumnType("int");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferLocation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShopId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("POS_Infotech.Models.Suppliers", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("POS_Infotech.Models.Categories", b =>
                {
                    b.HasOne("POS_Infotech.Models.Categories", "MainCategory")
                        .WithMany()
                        .HasForeignKey("MainCategoryId");

                    b.Navigation("MainCategory");
                });

            modelBuilder.Entity("POS_Infotech.Models.Products", b =>
                {
                    b.HasOne("POS_Infotech.Models.Categories", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
