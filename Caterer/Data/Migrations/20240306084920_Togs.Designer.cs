// <auto-generated />
using System;
using Caterer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Caterer.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240306084920_Togs")]
    partial class Togs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Caterer.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Caterer.Models.CateringCategory", b =>
                {
                    b.Property<int>("CateringCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateringCategoryId"), 1L, 1);

                    b.Property<decimal>("CategoryPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CateringCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ItemAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("CateringCategoryId");

                    b.ToTable("CateringCategories");
                });

            modelBuilder.Entity("Caterer.Models.CateringExtra", b =>
                {
                    b.Property<int>("CateringExtrasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateringExtrasId"), 1L, 1);

                    b.Property<string>("AddonCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CateringItemId")
                        .HasColumnType("int");

                    b.Property<string>("ExtraName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExtraPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CateringExtrasId");

                    b.HasIndex("CateringItemId");

                    b.ToTable("CateringExtras");
                });

            modelBuilder.Entity("Caterer.Models.CateringItem", b =>
                {
                    b.Property<int>("CateringItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateringItemId"), 1L, 1);

                    b.Property<int>("CateringCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CateringExtrasId")
                        .HasColumnType("int");

                    b.Property<int?>("CateringExtrasId1")
                        .HasColumnType("int");

                    b.Property<decimal?>("DineInPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("EnableAlwaysAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableVariants")
                        .HasColumnType("bit");

                    b.Property<bool>("Friday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FridayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FridayStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ItemAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ItemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MenuCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("MenuCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MondayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MondayStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SaturdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SaturdayStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("SelectedItem")
                        .HasColumnType("int");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SundayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SundayStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ThursdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThursdayStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TuesdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TuesdayStart")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("VATPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("WednesdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WednesdayStart")
                        .HasColumnType("datetime2");

                    b.HasKey("CateringItemId");

                    b.HasIndex("CateringCategoryId");

                    b.HasIndex("CateringExtrasId1");

                    b.HasIndex("MenuCategoryId");

                    b.ToTable("CateringItems");
                });

            modelBuilder.Entity("Caterer.Models.Extra", b =>
                {
                    b.Property<int>("ExtrasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtrasId"), 1L, 1);

                    b.Property<string>("AddonCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExtraPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.HasKey("ExtrasId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Extras");
                });

            modelBuilder.Entity("Caterer.Models.GRN", b =>
                {
                    b.Property<int>("GrnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrnId"), 1L, 1);

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("GRNDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GRNNO")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GRNType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Measurement")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Paymentmethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PurchaseOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierInvoiceNo")
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("addonetime")
                        .HasColumnType("int");

                    b.HasKey("GrnId");

                    b.HasIndex("SupplierId");

                    b.ToTable("GRNS");
                });

            modelBuilder.Entity("Caterer.Models.Measurement", b =>
                {
                    b.Property<int>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasurementId"), 1L, 1);

                    b.Property<string>("MeasurementName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("MeasurementId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("Caterer.Models.MenuCategory", b =>
                {
                    b.Property<int>("MenuCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuCategoryId"), 1L, 1);

                    b.Property<bool>("ItemAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("MenuCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("SelectedItem")
                        .HasColumnType("int");

                    b.HasKey("MenuCategoryId");

                    b.ToTable("MenuCategories");
                });

            modelBuilder.Entity("Caterer.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"), 1L, 1);

                    b.Property<decimal?>("DineInPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("EnableAlwaysAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableVariants")
                        .HasColumnType("bit");

                    b.Property<int?>("ExtrasId")
                        .HasColumnType("int");

                    b.Property<int?>("ExtrasId1")
                        .HasColumnType("int");

                    b.Property<bool>("Friday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FridayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FridayStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ItemAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ItemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MenuCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MondayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MondayStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SaturdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SaturdayStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SundayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SundayStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ThursdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThursdayStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TuesdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TuesdayStart")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("VATPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("WednesdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WednesdayStart")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuItemId");

                    b.HasIndex("ExtrasId1");

                    b.HasIndex("MenuCategoryId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Caterer.Models.MenuRecipe", b =>
                {
                    b.Property<int>("MenuRecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuRecipeId"), 1L, 1);

                    b.Property<string>("MenuCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MenuItemId1")
                        .HasColumnType("int");

                    b.Property<string>("MenuItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuRecipeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuRecipeNo")
                        .HasColumnType("int");

                    b.Property<decimal>("MenuRecipeQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Packs")
                        .HasColumnType("int");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId1")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Productcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("MenuRecipeId");

                    b.HasIndex("MenuItemId1");

                    b.HasIndex("ProductId1");

                    b.ToTable("MenuRecipes");
                });

            modelBuilder.Entity("Caterer.Models.Menurecipeingredientslist", b =>
                {
                    b.Property<int>("MenurecipeingredientslistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenurecipeingredientslistId"), 1L, 1);

                    b.Property<string>("MenuCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuRecipeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResturantId")
                        .HasColumnType("int");

                    b.HasKey("MenurecipeingredientslistId");

                    b.ToTable("Menurecipeingredientslist");
                });

            modelBuilder.Entity("Caterer.Models.MenurecipeProductlist", b =>
                {
                    b.Property<int>("MenuRecipeProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuRecipeProductId"), 1L, 1);

                    b.Property<decimal>("MenuRecipeQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MenurecipeingredientslistId")
                        .HasColumnType("int");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId1")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResturantId")
                        .HasColumnType("int");

                    b.HasKey("MenuRecipeProductId");

                    b.HasIndex("MenurecipeingredientslistId");

                    b.HasIndex("ProductId1");

                    b.ToTable("MenurecipeProductlists");
                });

            modelBuilder.Entity("Caterer.Models.OrderDetailWebsite", b =>
                {
                    b.Property<int>("OrderDetailsWebsiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailsWebsiteId"), 1L, 1);

                    b.Property<bool>("AddExtra")
                        .HasColumnType("bit");

                    b.Property<decimal?>("AddExtraTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Buffet")
                        .HasColumnType("int");

                    b.Property<decimal>("BuffetSetup")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CCV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Card")
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cash")
                        .HasColumnType("int");

                    b.Property<int>("CateringCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CateringItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Delivery")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraCateringCategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraCateringItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraCateringItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraCateringItemPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraCateringItemPriceTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraCateringNoOfPax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraCateringSubCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraItemPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraItemPriceTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraNoOfPax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExtraPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExtraSubcategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtrasCateringItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtrasName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FoodCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FullPay")
                        .HasColumnType("int");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MenuAdjustmentTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NoOfPerson")
                        .HasColumnType("int");

                    b.Property<string>("OrderTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PartialAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PartialPay")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SelfCollect")
                        .HasColumnType("int");

                    b.Property<string>("SoftDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subcategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Transport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderDetailsWebsiteId");

                    b.HasIndex("CateringCategoryId");

                    b.ToTable("OrderDetailWebsites");
                });

            modelBuilder.Entity("Caterer.Models.PreProduction", b =>
                {
                    b.Property<int>("PreProductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreProductionId"), 1L, 1);

                    b.Property<string>("MenuCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuRecipeId")
                        .HasColumnType("int");

                    b.Property<int>("MenuRecipeNo")
                        .HasColumnType("int");

                    b.Property<decimal>("MenuRecipeQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Packs")
                        .HasColumnType("int");

                    b.Property<string>("PreProductionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Productcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("TotalPack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("PreProductionId");

                    b.HasIndex("MenuRecipeId");

                    b.ToTable("PreProductions");
                });

            modelBuilder.Entity("Caterer.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("CreatedBy")
                        .HasColumnType("bit");

                    b.Property<int?>("ExpireDate")
                        .HasColumnType("int");

                    b.Property<decimal?>("Instock")
                        .HasColumnType("decimal");

                    b.Property<int?>("MeasurementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Mrp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OpeningStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OpeningStockDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .IsRequired()
                        .HasColumnType("Decimal");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SafetyStock")
                        .HasColumnType("decimal");

                    b.Property<int?>("StockControl")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("Decimal");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("Decimal");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productcode")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MeasurementId");

                    b.HasIndex("TaxId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Caterer.Models.Production", b =>
                {
                    b.Property<int>("ProductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductionId"), 1L, 1);

                    b.Property<int>("CateringCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ExtraPacks")
                        .HasColumnType("int");

                    b.Property<string>("MenuCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("MenuItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuRecipePacks")
                        .HasColumnType("int");

                    b.Property<decimal?>("MenuRecipeQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderDetailsWebsiteId")
                        .HasColumnType("int");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("TotalNoOfPacks")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UsedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("ProductionId");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("Caterer.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderId"), 1L, 1);

                    b.Property<string>("DeliveryInstruction")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InStock")
                        .HasColumnType("decimal");

                    b.Property<decimal>("Incoming")
                        .HasColumnType("decimal");

                    b.Property<string>("Measurement")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PNo")
                        .HasColumnType("int");

                    b.Property<string>("Paymentmethod")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PurchaseOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOrderNo")
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseOrderId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("Caterer.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AutoRejectWaitTime")
                        .HasColumnType("int");

                    b.Property<int?>("AverageOrderPrepareTimeInMinutes")
                        .HasColumnType("int");

                    b.Property<decimal>("Buffet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("CanAutoAccept")
                        .HasColumnType("bit");

                    b.Property<bool>("CanAutoReject")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeliver")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDineIn")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDispalyAllergensOnMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEnableCostBasedOnRange")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEnableCoupons")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEnableCustomDeliveyCost")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEnableDrivers")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEnableExpenses")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEnableKitchenDisplaySystem")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEnableOrderAfterWorkingTimeOfTheStore")
                        .HasColumnType("bit");

                    b.Property<bool>("CanFreeDeliver")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPickup")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPreorder")
                        .HasColumnType("bit");

                    b.Property<bool>("CanSelfDelivery")
                        .HasColumnType("bit");

                    b.Property<bool>("CanShowAllLanguages")
                        .HasColumnType("bit");

                    b.Property<bool>("CanShowDateTimePickerEvenIfStoreIsOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("CanShowGoogleTranslate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanShowTax")
                        .HasColumnType("bit");

                    b.Property<int?>("CardPayoutdays")
                        .HasColumnType("int");

                    b.Property<bool>("ChineseLocalAsian")
                        .HasColumnType("bit");

                    b.Property<string>("Cover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Delivery")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DeliveryPreparationTime")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DisableCOD")
                        .HasColumnType("bit");

                    b.Property<bool>("DisableCardpayment")
                        .HasColumnType("bit");

                    b.Property<bool>("DisablePayNow")
                        .HasColumnType("bit");

                    b.Property<bool>("Disableordering")
                        .HasColumnType("bit");

                    b.Property<bool>("DoConversion")
                        .HasColumnType("bit");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<string>("FifthRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FourthRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FreeDeliveryCost")
                        .HasColumnType("int");

                    b.Property<bool>("Friday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FridayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FridayStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FullSetUpBuffet")
                        .HasColumnType("bit");

                    b.Property<bool>("Halal")
                        .HasColumnType("bit");

                    b.Property<string>("Impressum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Indian")
                        .HasColumnType("bit");

                    b.Property<bool>("International")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("Japanese")
                        .HasColumnType("bit");

                    b.Property<string>("KitchenThermalPrinterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainThermalPrinterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Malay")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Minimum")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Minutes")
                        .HasColumnType("int");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MondayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MondayStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NonHalal")
                        .HasColumnType("bit");

                    b.Property<bool>("NonVeg")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PayNowFee")
                        .HasColumnType("float");

                    b.Property<int?>("PayNowPayOutDays")
                        .HasColumnType("int");

                    b.Property<int?>("PayNowServiceTax")
                        .HasColumnType("int");

                    b.Property<double>("PayNowStaticFee")
                        .HasColumnType("float");

                    b.Property<string>("PriceForFifthRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceForFirstRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceForFourthRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceForSecondRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceForThirdRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrintA4StandardOrderWhen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrintNodeApiKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrintOnKitchenThermalPrinterWhen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrintOnMainThermalPrinterWhen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QRPaymentWaitTime")
                        .HasColumnType("int");

                    b.Property<int>("ResId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantBankAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantBankHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantBankShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SaturdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SaturdayStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecondKitchenThermalPrinterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondMainPrinterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectYoutMenuTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceTax")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceTaxDineIn")
                        .HasColumnType("int");

                    b.Property<string>("StandardPrinterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("StaticFee")
                        .HasColumnType("float");

                    b.Property<double>("StripeFee")
                        .HasColumnType("float");

                    b.Property<int?>("StripeServiceTax")
                        .HasColumnType("int");

                    b.Property<double>("StripeStaticFee")
                        .HasColumnType("float");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SundayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SundayStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TakeawayMin")
                        .HasColumnType("int");

                    b.Property<int>("TaxId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId1")
                        .HasColumnType("int");

                    b.Property<bool>("Thai")
                        .HasColumnType("bit");

                    b.Property<string>("ThirdRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ThursdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThursdayStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeFormatForClosingTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeFormatForOrders")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimeSlotSeparatedInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleOfImpressum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TuesdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TuesdayStart")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Vegetarian")
                        .HasColumnType("bit");

                    b.Property<string>("WebhookCalledApprovedBySystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebhookCalledApprovedByvendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("WednesdayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WednesdayStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Western")
                        .HasColumnType("bit");

                    b.HasKey("RestaurantId");

                    b.HasIndex("TaxId1");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("Caterer.Models.StockAdjustment", b =>
                {
                    b.Property<int>("StockAdjustmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockAdjustmentId"), 1L, 1);

                    b.Property<string>("AdjustmentReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdjustmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StockDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StockAdjustmentId");

                    b.HasIndex("ProductId");

                    b.ToTable("StockAdjustments");
                });

            modelBuilder.Entity("Caterer.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<string>("BillingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CreditPeriod")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("ShippingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("SupplierId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Caterer.Models.Tax", b =>
                {
                    b.Property<int>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxId"), 1L, 1);

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("TaxName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TaxNo")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxPercentage")
                        .HasColumnType("decimal");

                    b.Property<string>("TaxType")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TaxId");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("Caterer.Models.Tog", b =>
                {
                    b.Property<int>("TogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TogId"), 1L, 1);

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GRNType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Measurement")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Paymentmethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PurchaseOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TNo")
                        .HasColumnType("int");

                    b.Property<int>("ToWarehouseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TogInvoiceNo")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TogNO")
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("addonetime")
                        .HasColumnType("int");

                    b.HasKey("TogId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Togs");
                });

            modelBuilder.Entity("Caterer.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Caterer.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseId"), 1L, 1);

                    b.Property<string>("BankDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("SignatureImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Caterer.Models.CateringExtra", b =>
                {
                    b.HasOne("Caterer.Models.CateringItem", null)
                        .WithMany("ExtraList")
                        .HasForeignKey("CateringItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Caterer.Models.CateringItem", b =>
                {
                    b.HasOne("Caterer.Models.CateringCategory", null)
                        .WithMany("CateringItems")
                        .HasForeignKey("CateringCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Caterer.Models.CateringExtra", "CateringExtras")
                        .WithMany()
                        .HasForeignKey("CateringExtrasId1");

                    b.HasOne("Caterer.Models.MenuCategory", "MenuCategory")
                        .WithMany()
                        .HasForeignKey("MenuCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CateringExtras");

                    b.Navigation("MenuCategory");
                });

            modelBuilder.Entity("Caterer.Models.Extra", b =>
                {
                    b.HasOne("Caterer.Models.MenuItem", null)
                        .WithMany("ExtraList")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Caterer.Models.GRN", b =>
                {
                    b.HasOne("Caterer.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Caterer.Models.MenuItem", b =>
                {
                    b.HasOne("Caterer.Models.Extra", "Extras")
                        .WithMany()
                        .HasForeignKey("ExtrasId1");

                    b.HasOne("Caterer.Models.MenuCategory", "MenuCategory")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Extras");

                    b.Navigation("MenuCategory");
                });

            modelBuilder.Entity("Caterer.Models.MenuRecipe", b =>
                {
                    b.HasOne("Caterer.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId1");

                    b.HasOne("Caterer.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId1");

                    b.Navigation("MenuItem");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Caterer.Models.MenurecipeProductlist", b =>
                {
                    b.HasOne("Caterer.Models.Menurecipeingredientslist", null)
                        .WithMany("Menurecipeingredients")
                        .HasForeignKey("MenurecipeingredientslistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Caterer.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId1");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Caterer.Models.OrderDetailWebsite", b =>
                {
                    b.HasOne("Caterer.Models.CateringCategory", "CateringCategory")
                        .WithMany()
                        .HasForeignKey("CateringCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CateringCategory");
                });

            modelBuilder.Entity("Caterer.Models.PreProduction", b =>
                {
                    b.HasOne("Caterer.Models.MenuRecipe", "MenuRecipe")
                        .WithMany()
                        .HasForeignKey("MenuRecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuRecipe");
                });

            modelBuilder.Entity("Caterer.Models.Product", b =>
                {
                    b.HasOne("Caterer.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Caterer.Models.Measurement", "Measurement")
                        .WithMany()
                        .HasForeignKey("MeasurementId");

                    b.HasOne("Caterer.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.Navigation("Category");

                    b.Navigation("Measurement");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Caterer.Models.PurchaseOrder", b =>
                {
                    b.HasOne("Caterer.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Caterer.Models.Restaurant", b =>
                {
                    b.HasOne("Caterer.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId1");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Caterer.Models.StockAdjustment", b =>
                {
                    b.HasOne("Caterer.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Caterer.Models.Supplier", b =>
                {
                    b.HasOne("Caterer.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Caterer.Models.Tog", b =>
                {
                    b.HasOne("Caterer.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Caterer.Models.CateringCategory", b =>
                {
                    b.Navigation("CateringItems");
                });

            modelBuilder.Entity("Caterer.Models.CateringItem", b =>
                {
                    b.Navigation("ExtraList");
                });

            modelBuilder.Entity("Caterer.Models.MenuCategory", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Caterer.Models.MenuItem", b =>
                {
                    b.Navigation("ExtraList");
                });

            modelBuilder.Entity("Caterer.Models.Menurecipeingredientslist", b =>
                {
                    b.Navigation("Menurecipeingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
