@model Caterer.Models.PreProduction

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_CaterersDashboard.cshtml";
}

<style>
    .selectpicker {
        border-width: 2px; /* Adjust the border thickness as needed */
    }

    .error-message {
        color: red;
        font-size: 0.8rem;
        margin-top: 5px;
    }

    #hidefield {
        display: none;
    }
</style>

<div class="container-fluid py-8">
    <div class="row">

        <div class="col-md-12 col-sm-12">
            <div class="card">
                <div class="card-header pb-0">

                    <div class="d-flex justify-content-between align-items-center">
                        <h4>Edit Pre-Production</h4>
                        <div class="d-flex">
                            <div class="ms-auto">
                                <a class="btn btn-primary btn-sm ms-auto" asp-action="Index" asp-controller="PreProductions">Back To List</a>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="card-body">
                    <div class="row">
                        <form asp-action="Edit" asp-controller="PreProductions" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" id="indentitycolumn" asp-for="Id" value="@ViewBag.Id" class="form-control" />
                            <input type="hidden" asp-for="MenuItemId" value="@ViewBag.FirstpreProduction?.MenuItemId" class="form-control" />
                            <div class="row">
                                <div class="col-4">
                                    <div class="form-group">
                                        <label class="control-label">Recipe Name</label>
                                        <input asp-for="MenuItemName" value="@ViewBag.FirstpreProduction?.MenuItemName" readonly class="form-control" />
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="form-group">
                                        <label asp-for="PreProductionDate" class="control-label"></label>
                                        <input type="date" required asp-for="PreProductionDate" value="@ViewBag.FirstpreProduction?.PreProductionDate?.ToString("yyyy-MM-dd")" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="form-group">
                                        <label asp-for="ExpiryDate" class="control-label"></label>
                                        <input type="date" required asp-for="ExpiryDate" value="@ViewBag.FirstpreProduction?.ExpiryDate?.ToString("yyyy-MM-dd")" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-4" style="display:none">
                                    <div class="form-group">
                                        <label asp-for="Type" class="control-label"></label>
                                        <input type="text" asp-for="Type" class="form-control" value="Preproduction" readonly />
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="form-group">
                                        <label asp-for="PreProductionStatus" class="control-label"></label>
                                        <select data-live-search="true" asp-for="PreProductionStatus" class="form-control selectpicker">
                                            <option value="@ViewBag.FirstpreProduction?.PreProductionStatus">@ViewBag.FirstpreProduction?.PreProductionStatus</option>
                                            <option value="Process">Process</option>
                                            <option value="Completed">Completed</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4" style="display:none">
                                        <div class="form-group">
                                            <label for="warehouseId">Warehouse Id</label>
                                            <input asp-for="WarehouseId" value="@ViewBag.FirstpreProduction?.WarehouseId" name="WarehouseId" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="warehouseName">Warehouse Name</label>
                                            <input name="WarehouseName" value="@ViewBag.FirstpreProduction?.WarehouseName" class="form-control" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="container">
                                <div class="table-responsive">
                                    <table class="table" id="tablelist">
                                        <thead>
                                            <tr>
                                                <th id="hidefield">RestaurantId</th>
                                                <th>Recipe Name</th>
                                                <th>Category</th>
                                                <th id="hidefield">Product Id</th>
                                                <th>Product Name</th>
                                                <th id="hidefield">Productcode</th>
                                                <th>Product Type</th>
                                                <th>Product Unit</th>
                                                <th>Product Category</th>
                                                <th id="hidefield">Packs</th>
                                                <th id="hidefield">Menu Recipe Qty</th>
                                                <th>Used Qty</th>
                                                <th>Product Total Qty</th>
                                                <th>Total Packs</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var data in ViewBag.preproductions)
                                            {
                                                <tr>

                                                    <td id="hidefield"><input id="RestaurantIdId" asp-for="RestaurantId" value="@data.RestaurantId" class="form-control" readonly /></td>
                                                    <td><input id="MenuItemNameId" asp-for="MenuItemName" value="@data.MenuItemName" class="form-control" readonly /></td>
                                                    <td><input id="MenuCategoryId" asp-for="MenuCategory" value="@data.MenuCategory" class="form-control" readonly /></td>
                                                    <td id="hidefield"><input id="ProductId" asp-for="ProductId" value="@data.ProductId" class="form-control" readonly /></td>
                                                    <td><input id="ProductNameId" asp-for="ProductName" value="@data.ProductName" class="form-control" readonly /> </td>
                                                    <td><input id="ProductCategoryId" asp-for="ProductCategory" value="@data.ProductCategory" class="form-control" readonly /></td>
                                                    <td id="hidefield"><input id="ProductcodeId" asp-for="Productcode" value="@data.Productcode" class="form-control" readonly /> </td>
                                                    <td><input id="ProductTypeId" asp-for="ProductType" value="@data.ProductType" class="form-control" readonly /></td>
                                                    <td><input id="ProductUnitId" asp-for="ProductUnit" value="@data.ProductUnit" class="form-control" readonly /></td>
                                                    <td id="hidefield"><input id="PacksId" asp-for="Packs" value="@data.Packs" class="form-control packs" readonly /></td>
                                                    <td id="hidefield"><input id="MenuRecipeQtyId" asp-for="MenuRecipeQty" value="@data.MenuRecipeQty" class="form-control menu-recipe-qty" readonly /></td>
                                                    <td><input id="TotalQuantityId" asp-for="TotalQuantity" value="@data.TotalQuantity" class="form-control used-quantity" data-usedquantity="@data.TotalQuantity" required /></td>
                                                    <td>
                                                        <input id="ProductTotalQuantityId" asp-for="ProductTotalQuantity" value="@data.Quantity" class="form-control product-total-qty" data-value="@data.Quantity" readonly />
                                                    </td>

                                                    <td><input id="TotalPackId" asp-for="TotalPack" value="@data.TotalPack" class="form-control total-pack" required /></td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            <div class="row  ">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <div class="text-center custom-pro-edt-ds">
                                        <div class="text-center">
                                            <input type="submit" value="Save" class="btn btn-primary" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.14.0-beta2/css/bootstrap-select.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.14.0-beta2/js/bootstrap-select.min.js"></script>

<script>
    $(document).ready(function () {
        $('.selectpicker').selectpicker();
    });

</script>




<script>
    $(document).ready(function () {
        function updateProductTotalQty() {
            $('#tablelist').on('input', '.total-pack, .menu-recipe-qty', function () {
                var $row = $(this).closest('tr');
                var totalPack = parseFloat($row.find('.total-pack').val());
                var menuRecipeQty = parseFloat($row.find('.menu-recipe-qty').val());
                var originalProductTotalQty = parseFloat($row.find('.product-total-qty').data('value')); // Retrieve the original Product Total Qty
                var usedQuantity = totalPack / parseFloat($row.find('.packs').val()) * menuRecipeQty;
                $row.find('.used-quantity').val(usedQuantity.toFixed(2)); // Round to 2 decimal places
                var newProductTotalQty = Math.max(originalProductTotalQty - usedQuantity, 0); // Ensure product total qty is not less than 0
                $row.find('.product-total-qty').val(newProductTotalQty.toFixed(2)); // Update product total quantity
            });
        }

        // Call the function to bind the event listeners
        updateProductTotalQty();
        //$('.total-pack, .menu-recipe-qty').trigger('input');

        function updateProductTotalQuantity() {
            $('#container').on('input', '.used-quantity, .product-total-qty, .total-pack, .menu-recipe-qty', function () {
                // Find the current row
                var row = $(this).closest('tr');

                // Get the values from 'TotalQuantity' and 'ProductTotalQuantity' fields
                var totalQuantity = parseFloat(row.find('.used-quantity').val());
                var productTotalQuantity = parseFloat(row.find('.product-total-qty').data('value'));

                // Check if totalQuantity is NaN, and use the original value
                if (isNaN(totalQuantity)) {
                    totalQuantity = 0; // or any default value you prefer
                }

                // Check if productTotalQuantity is NaN, and use the original value
                if (isNaN(productTotalQuantity)) {
                    productTotalQuantity = parseFloat(row.find('.product-total-qty').val()) || 0;
                }

                // Calculate the difference and update 'ProductTotalQuantity' field
                var totalPack = productTotalQuantity - totalQuantity;

                // Check if the new product total quantity is less than or equal to 0
                if (totalPack <= 1) {
                    // Display alert message
                    alert('Product Total Quantity Limit Exceeded.');

                    // Reset values after a short delay
                    setTimeout(function () {
                        // Reset product total quantity to original value
                        row.find('.product-total-qty').val(productTotalQuantity.toFixed(2));
                        // Reset used quantity to menu recipe quantity
                        row.find('.used-quantity').val(row.find('.used-quantity').data('usedquantity'));
                        // Reset packs to original value
                        row.find('.total-pack').val(row.find('.packs').val());
                    }, 5);

                    return; // Exit the function
                }

                // Update 'ProductTotalQuantity' field
                row.find('.product-total-qty').val(totalPack.toFixed(2));
            });
        }

        // Call the function to bind the event listeners
        updateProductTotalQuantity();
    });
</script>

