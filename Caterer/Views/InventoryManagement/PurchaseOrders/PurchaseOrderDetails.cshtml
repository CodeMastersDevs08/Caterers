@model Caterer.Models.PurchaseOrder
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_CaterersDashboard.cshtml";
    ViewData["Heading"] = "Purchase Order";
}
<div class="container-fluid py-8">
    <div class="row">
        <div class="col-10">
            <div class="card">
                <div class="card-header pb-0">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4>Purchase Order Details</h4>
                        <div class="d-flex">
                            <div class="ms-auto">
                                <a class="btn btn-primary btn-sm ms-auto" asp-controller="PurchaseOrders" asp-action="PurchaseOrderList">Back to List</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="col-md-6">
                            <table style="width:100%;">

                                <tr>
                                    <td class="align-right" style="color: midnightblue;font-weight:600;">Supplier : @Model.Supplier.SupplierName</td>
                                </tr>
                                <tr>
                                    <td class="align-right">@Model.Supplier.ShippingAddress</td>
                                </tr>
                                <tr>
                                    <td class="align-right">@Model.Supplier.PhoneNumber</td>
                                </tr>
                                <tr>
                                    <td class="align-right">@Model.Supplier.Email</td>
                                </tr>
                            </table>

                        </div>
                        <div class="d-flex">
                            <div class="ms-auto">
                                <div class="text-right btn-sm ms-auto">

                                    <table style="width:100%;">

                                        <tr>
                                            <td><h5>Po No: @Model.PurchaseOrderNo</h5></td>
                                        </tr>
                                        <tr>
                                            <th style="text-align: left;">Order Date</th>
                                            <td class="align-right">@(Model.PurchaseOrderDate.ToString("dd-MM-yyyy" ?? "N/A"))</td>
                                        </tr>
                                        <tr>
                                            <th style="text-align: left;">Expected Date:</th>
                                            <td class="align-right">@(Model.ExpectedDate.ToString("dd-MM-yyyy" ?? "N/A"))</td>
                                        </tr>
                                        <tr>
                                            <th style="text-align: left;">Payment Method:</th>
                                            <td class="align-right">@Model.Paymentmethod</td>
                                        </tr>
                                        <tr>
                                            <th style="text-align: left;">Delivery Instructions:</th>
                                            <td class="align-right">@Model.DeliveryInstruction</td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="table-responsive">
                    <table class="table" style="margin-top:50PX;">
                        <thead>
                            <tr>
                                    <th>S.No</th>
                                <th>Product Name</th>
                                <th>Measurement</th>
                                <th>Quantity</th>
                                <th>Unit Cost</th>
                                <th>Total Cost</th>
                            </tr>
                        </thead>
                        <tbody>
                                @{
                                    int counter = 1;
                                }
                            @foreach (var relatedPurchaseOrder in (List<Caterer.Models.PurchaseOrder>)ViewData["RelatedPurchaseOrders"])
                            {
                                <tr>
                                        <td>@counter</td>
                                    <td>@relatedPurchaseOrder.ProductName</td>
                                    <td>@relatedPurchaseOrder.Measurement</td>
                                    <td>
                                        @*@if (relatedPurchaseOrder.Quantity == 0)
                                    {
                                    @Html.Raw("-")
                                    }
                                    else
                                    {
                                    @string.Format("{0:0.###}", relatedPurchaseOrder.Quantity)
                                    }*@
                                        @relatedPurchaseOrder.Quantity
                                    </td>
                                    <td>@relatedPurchaseOrder.UnitCost</td>
                                    <td>@relatedPurchaseOrder.TotalCost</td>
                                        @{
                                            counter++;
                                        }
                                </tr>
                            }
                        </tbody>
                    </table>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="col-md-12" style="width:100%;margin-top:20PX;padding-right:25PX;">
                            <div class="d-flex">
                                <div class="ms-auto">
                                    <div class="text-right btn-sm ms-auto">
                                        <div class="total">
                                            <div><h6>Total Amount:  <strong> @Model.Total</strong></h6></div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4">
                        @if (Model.Status == "Pending" && ViewData["RelatedGRNs"] != null && ((List<Caterer.Models.GRN>)ViewData["RelatedGRNs"]).Any())
                        {
                            <p>Status: Partially Completed</p>
                        }
                        else
                        {
                            <p>Status: @Model.Status</p>
                        }
                    </div>
                    <h5>Received GRN</h5>
                    <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>GRN No</th>
                                <th>ProductName</th>
                                <th>GRN Date</th>
                                <th>Quantity</th>
                              @*  <th>Balance</th>*@
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                // Initialize a dictionary to store the total GRN quantity for each product
                                Dictionary<string, int> totalGRNQuantities = new Dictionary<string, int>();
                            }

                            @foreach (var relatedGRN in (List<Caterer.Models.GRN>)ViewData["RelatedGRNs"])
                            {
                                <tr>
                                    <td>@relatedGRN.GRNNO</td>
                                    <td>@relatedGRN.ProductName</td>
                                    <td>@relatedGRN.GRNDate.ToString("MM/dd/yyyy")</td>
                                    <td>@relatedGRN.Quantity</td>

                                    @{
                                        // Check if the product is already in the dictionary
                                        if (!totalGRNQuantities.ContainsKey(relatedGRN.ProductName))
                                        {
                                            totalGRNQuantities[relatedGRN.ProductName] = 0;
                                        }

                                        // Accumulate the GRN quantities for each product
                                        totalGRNQuantities[relatedGRN.ProductName] += (int)relatedGRN.Quantity;
                                    }

                                  @*  <td>@(totalGRNQuantities[relatedGRN.ProductName] - Model.Quantity)</td>*@ <!-- Calculate and display the balance -->
                                    <td>
                                        <p>@Model.Status</p>
                                    </td>
                                    <td>
                                    </td>
                                    <!-- Add more cells as needed -->
                                </tr>
                            }
                        </tbody>
                    </table>
                    </div>
                    <br />
                    <br />
                    <div class="row">
                        <div class="col-md-4">
                            <div class="signature">
                                <div class="signature-line">
                                    <span class="signature-label"><b>Store Keeper Signature:</b></span>
                                    <div class="signature-box"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="signature">
                                <div class="signature-line">
                                    <span class="signature-label"><b>Approved by</b></span>
                                    <div class="signature-box"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="signature">
                                <div class="signature-line">
                                    <span class="signature-label"><b>Received by:</b></span>
                                    <div class="signature-box"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div>
                        <div class="row">
                            <div class="col-md-4">
                                @if (Model.Status == "Pending")
                                {
                                    <!-- Your content for the first column -->
                                }
                            </div>
                            <div class="col-md-4 text-center">
                                <div class="text-center custom-pro-edt-ds">
                                    @if (Model.Status == "Pending")
                                    {
                                        <a asp-action="CreateGRN" asp-controller="GRNs"
                                           asp-route-total="@Model.Total"
                                           asp-route-purchaseOrderNo="@Model.PurchaseOrderNo"
                                           asp-route-purchaseOrderDate="@Model.PurchaseOrderDate.ToString("yyyy-MM-dd")"
                                           asp-route-supplierId="@Model.SupplierId"
                                           asp-route-paymentMethod="@Model.Paymentmethod"
                                           class="btn btn-success">Create GRN</a>
                                        <button id="printButton" class="btn btn-success ml-2">
                                            Print
                                        </button>
                                    }
                                    else if (Model.Status == "Partially")
                                    {
                                        <a asp-action="CreateUpdateGRN" asp-controller="GRNs"
                                           asp-route-total="@Model.Total"
                                           asp-route-purchaseOrderNo="@Model.PurchaseOrderNo"
                                           asp-route-purchaseOrderDate="@Model.PurchaseOrderDate.ToString("yyyy-MM-dd")"
                                           asp-route-supplierId="@Model.SupplierId"
                                           asp-route-paymentMethod="@Model.Paymentmethod"
                                           class="btn btn-success">Create GRN</a>
                                        <button id="printButton" class="btn btn-success ml-2">
                                            Print
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                      


                    </div>
                </div>
            </div>
            @section Scripts {

                @{
                    await Html.RenderPartialAsync("_ValidationScriptsPartial");
                }
            }
        </div>
    </div>
</div>