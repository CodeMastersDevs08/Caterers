@model Caterer.Models.PurchaseViewModel
@{
    ViewData["Title"] = "Create";
    ViewData["Heading"] = "Purchase Order";
    Layout = "~/Views/Shared/_CaterersDashboard.cshtml";
}
<style>

    .ui-autocomplete {
        max-height: 150px;
        overflow-y: auto;
        overflow-x: hidden;
        padding-right: 20px;
        position: absolute;
        background-color: white;
        border: 1px solid #ccc;
        z-index: 9999;
    }
        .ui-autocomplete li {
            padding: 5px;
            cursor: pointer;
            list-style-type: none;
            border-bottom: 1px solid #ccc;
        }

            .ui-autocomplete li:last-child {
                border-bottom: none;
            }

            .ui-autocomplete li.ui-state-focus {
                background-color: #f0f0f0;
            }
    .non-editable {
        pointer-events: none;
    }
</style>
<body class="hold-transition sidebar-mini layout-fixed">
    <div class="container-fluid py-8">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header pb-0">

                        <div class="d-flex justify-content-between align-items-center">
                            <h4>Add New Purchase Order</h4>
                            <div class="d-flex">
                                <div class="ms-auto">
                                    <a class="btn btn-success btn-sm ms-auto" asp-action="PurchaseOrderList" asp-controller="PurchaseOrders">Back to List</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <form id="purchaseOrderForm" asp-action="PurchaseOrderCreate">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input asp-for="PNo" title="PNO " type="hidden" class="form-control" readonly />
                            <input type="hidden" asp-for="Status" />
                            <input type="hidden" asp-for="Incoming" value="0" />
                            <input asp-for="InStock" value="0" type="hidden" class="instock" />
                            <div class="row" style="display:none;">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="warehouseId">Warehouse Id</label>
                                        <input asp-for="WarehouseId" id="warehouseId" name="WarehouseId" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="warehouseName">Warehouse Name</label>
                                        <input asp-for="WarehouseName" id="warehouseName" name="WarehouseName" class="form-control" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <input asp-for="RestaurantId" placeholder="RestaurantId" type="hidden" class="form-control" value="@ViewBag.RestaurantId" />
                                        <label asp-for="PurchaseOrderNo" class="control-label">Purchase Order No</label>
                                        <input asp-for="PurchaseOrderNo" title="Purchase Order Number" class="form-control non-editable" placeholder="Purchase Order No" />
                                        <span asp-validation-for="PurchaseOrderNo" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label asp-for="PurchaseOrderDate" class="control-label">Purchase Order Date</label>
                                        <input asp-for="PurchaseOrderDate" type="date" id="purchaseOrderDateInput" value="@DateTime.Now.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")" onchange="updateExpectedDateMin()" title="Purchase Order Date" class="form-control" />
                                        <span asp-validation-for="PurchaseOrderDate" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label asp-for="SupplierId" class="control-label">Supplier Name</label>
                                        <div class="input-group">
                                            <select asp-for="SupplierId" title="Supplier Name" asp-items="@(ViewData["Suppliers"] as List<SelectListItem>)" class="form-control pro-edt-select form-control-primary" required>
                                            </select>

                                            <div class="input-group-append">
                                                <button class="btn btn-info" id="addSupplierBtnId">+</button>
                                            </div>
                                        </div>
                                        <span asp-validation-for="SupplierId" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="ExpectedDate" class="control-label">Expected Date</label>
                                        <input asp-for="ExpectedDate" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")" class="form-control" />
                                        <span asp-validation-for="ExpectedDate" class="text-danger"></span>
                                    </div>
                                </div>
                              
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="Paymentmethod" class="control-label">Payment Method</label>
                                        <select asp-for="Paymentmethod" class="form-control pro-edt-select form-control-primary">
                                            <option>Cash</option>
                                            <option>Bank</option>
                                            <option>Credit</option>
                                        </select>
                                        <span asp-validation-for="Paymentmethod" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div id="inputRowWrapper">
                              
                                <div class="table-responsive">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>Product Name</th>
                                                <th>Measurement</th>
                                                <th>Quantity</th>
                                                <th>Unit Cost</th>
                                                <th>Total Cost</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="input-group1">
                                                <td>
                                                    <input asp-for="ProductName" class="product-autocomplete form-control" title="Product Name" placeholder="Product Name" />
                                                    <span asp-validation-for="ProductName" class="text-danger"></span>
                                                </td>
                                                <td>
                                                    <input asp-for="Measurement" class="measurement form-control" title="Measurement" placeholder="Measurement" />
                                                    <span asp-validation-for="Measurement" class="text-danger"></span>
                                                    <input asp-for="InStock" value="0" type="hidden" class="instock" />
                                                </td>
                                                <td>
                                                    <input asp-for="Quantity" title="Quantity" class="quantity form-control" oninput="calculateTotalCost(this)" value="" placeholder="Quantity " />
                                                    <span asp-validation-for="Quantity" class="text-danger"></span>
                                                </td>
                                                <td>
                                                    <input asp-for="UnitCost" class="unit-cost form-control" oninput="calculateTotalCost(this)" title="Unit Cost" value="" placeholder="Unit Cost " />
                                                    <span asp-validation-for="UnitCost" class="text-danger"></span>
                                                </td>
                                                <td>
                                                    <input asp-for="TotalCost" class="total-cost form-control" id="total-cost" title="Total Cost" value="" placeholder="Total Cost " />
                                                    <span asp-validation-for="TotalCost" class="text-danger"></span>
                                                </td>
                                                <td class="py-1">
                                                    <div class="btn-group">
                                                        <button type="button" class="btn btn-success add-row" data-action="addRow">+</button>
                                                        <button type="button" class="btn btn-danger delete-row delete-row-icon">-</button>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-9">
                                    <div class="form-group">
                                        <label asp-for="DeliveryInstruction" class="control-label">Notes</label>

                                        <textarea asp-for="DeliveryInstruction" class="form-control" placeholder=" Please Enter Notes"> </textarea>
                                        <span asp-validation-for="DeliveryInstruction" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label asp-for="Total" class="control-label"></label>
                                        <input asp-for="Total" id="Total" class="form-control non-editable" title="Total" value="" placeholder="Total" />

                                        <span asp-validation-for="Total" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <input type="hidden" asp-for="Status" />
                                <span asp-validation-for="Status" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input type="hidden" asp-for="Incoming" value="0" />
                                <span asp-validation-for="Incoming" class="text-danger"></span>
                            </div>
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <div class="text-center custom-pro-edt-ds">
                                        <button type="submit" class="btn btn-success m-r-10" onclick="validateName()">
                                            Save
                                        </button>
                                    </div>
                                </div>
                            </div>

                        </form>
                    </div>
                </div>
                <div class="modal fade modal" id="AddWarehouseModal">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="text-info model-title">Add New Supplier</h1>
                                <button aria-label="Close" class="btn-close bg-danger" onclick="CloseModalPopup();"></button>
                            </div>

                            <div class="modal-body">
                                <form method="post" id="AddWarehouse_form">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <input placeholder="RestaurantId" id="RestaurantId" type="hidden" class="form-control" value="@ViewBag.RestaurantId" />
                                                <label>Supplier Name</label>
                                                <input required class="form-control" id="SupplierName" placeholder="Supplier Name" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label>Phone Number</label>
                                                <input type="number" class="form-control" id="PhoneNumber" placeholder="Please Enter PhoneNumber" autocomplete="off" required />
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label>Email</label>
                                                <input type="email" class="form-control" id="Email" placeholder=" Please Enter Email" autocomplete="off" required />
                                            </div>
                                        </div>
                                    </div>

                                    <div style="display:none">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Status</label>
                                                    <select id="RestaurantId" class="form-control">
                                                        <option value="Enable">Enable</option>
                                                        <option value="Disable">Disable</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>OpeningBalance</label>
                                                    <input type="number" class="form-control" id="OpeningBalance" placeholder="OpeningBalance" autocomplete="off" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>CreditPeriod</label>
                                                    <input type="number" class="form-control" id="CreditPeriod" placeholder="CreditPeriod" autocomplete="off" />
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>CreditLimit</label>
                                                    <input type="number" class="form-control" id="CreditLimit" placeholder="CreditLimit" autocomplete="off" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Billing Address</label>
                                                    <textarea type="text" class="form-control" id="BillingAddress" placeholder="Enter Billing Address" autocomplete="off"></textarea>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>ShippingAddress</label>
                                                    <textarea type="text" class="form-control" id="ShippingAddress" value="Empty" placeholder=" Please Enter ShippingAddress" autocomplete="off"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button class="btn btn-success" onclick="AddWarehouse();">Save</button>
                                <button class="btn btn-danger" onclick="CloseModalPopup();">Close</button>
                            </div>
                        </div>
                    </div>

                </div>
                @section Scripts {
                    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
                    <script>
                        $(document).ready(function () {
                            $("#addSupplierBtnId").click(function () {
                                $("#AddWarehouseModal").modal("show");
                            });
                        });

                        function CloseModalPopup() {
                            console.log("Closing modal popup");
                            $("#AddWarehouseModal").modal('hide');
                        }

                        function AddWarehouse() {
                            var objData = {
                                //WarehouseId: $('#WarehouseId').val(),
                                RestaurantId: $('#RestaurantId').val(),
                                SupplierName: $('#SupplierName').val(),
                                OpeningBalance: $('#OpeningBalance').val(),
                                CreditPeriod: $('#CreditPeriod').val(),
                                CreditLimit: $('#CreditLimit').val(),
                                PhoneNumber: $('#PhoneNumber').val(),
                                Email: $('#Email').val(),
                                BillingAddress: $('#BillingAddress').val(),
                                ShippingAddress: $('#ShippingAddress').val()
                            };

                            $.ajax({
                                url: '/PurchaseOrders/SaveSupplier',
                                type: 'POST',
                                data: objData,
                                dataType: 'json',
                                success: function (response) {
                                    alert("Supplier Saved Successfully..!");
                                    $('#SupplierId').append($('<option>', {
                                        value: response,
                                        text: objData.SupplierName
                                    }));

                                    ClearText(); 
                                    CloseModalPopup();
                                },
                                error: function (request, status, error) {
                                    alert("Something Went Wrong!");
                                },
                            });
                        };

                        function ClearText() {
                            console.log("Clearing text fields");
                            $('#WarehouseId').val('');
                            $('#RestaurantId').val('');
                            $('#SupplierName').val('');
                            $('#OpeningBalance').val('');
                            $('#CreditPeriod').val('');
                            $('#CreditLimit').val('');
                            $('#PhoneNumber').val('');
                            $('#Email').val('');
                            $('#BillingAddress').val('');
                            $('#ShippingAddress').val('');
                        }
                    </script>
                    <script>
                        function updateExpectedDateMin() {
                            var purchaseDateInput = document.getElementById('purchaseOrderDateInput');
                            var expectedDateInput = document.getElementById('expectedDateInput');

                            if (purchaseDateInput && expectedDateInput) {
                                expectedDateInput.min = purchaseDateInput.value;
                            }
                        }
                    </script>

                    <script>
                        var selectedProductNames = [];
                        function attachAutocomplete(container) {
                            var suggestionsDiv = container.find(".suggestions");  

                            container.find(".product-autocomplete").autocomplete({
                                source: function (request, response) {
                                    var warehouseId = $('#warehouseId').val();  
                                    $.ajax({
                                        url: "/PurchaseOrders/SearchProduct",
                                        type: "GET",
                                        data: { searchTerm: request.term, warehouseId: warehouseId }, 
                                        success: function (data) {
                                            response(data);
                                        }
                                    });
                                },
                                minLength: 1,
                                select: function (event, ui) {
                                    var selectedProductId = ui.item.value;
                                    if (selectedProductId) {
                                        var productName = ui.item.label;

                                        if (selectedProductNames.includes(productName)) {
                                            alert("Product with this name already exists in the list.");
                                            return false;  
                                        }
                                        selectedProductNames.push(productName);
                                        $.ajax({
                                            url: '@Url.Action("GetProductDetails", "PurchaseOrders")',
                                            data: { productId: selectedProductId },
                                            type: 'GET',
                                            dataType: 'json',
                                            success: function (data) {
                                                console.log(data);
                                                if (data) {
                                                    container.find(".measurement").val(data.measurementName);  
                                                    container.find(".instock").val(data.inStock);
                                                    container.find(".unit-cost").val(data.unitCost);

                                                    calculateTotalCost(container);
                                                }
                                            },
                                            error: function (error) {
                                                console.log(error);
                                            }
                                        });
                                    }
                                },
                                open: function (event, ui) {
                                    suggestionsDiv.empty().append($(this).data("ui-autocomplete").menu.element);
                                }
                            });
                        }

                        function removeProductName(productName, totalCost) {
                            var index = selectedProductNames.indexOf(productName);
                            if (index !== -1) {
                                selectedProductNames.splice(index, 1);
                                var currentTotal = parseFloat($("#Total").val());
                                if (!isNaN(currentTotal)) {
                                    var newTotal = currentTotal - totalCost;
                                    $("#Total").val(newTotal.toFixed(2));
                                }
                            }
                        }
                        function calculateTotalCost(container) {
                            var unitCost = parseFloat(container.find(".unit-cost").val());
                            var quantity = parseFloat(container.find(".quantity").val());

                            if (!isNaN(unitCost) && !isNaN(quantity)) {
                                var totalCost = unitCost * quantity;
                                container.find(".total-cost").val(totalCost.toFixed(2));
                            } else {
                                container.find(".total-cost").val('');
                            }

                            updateTotal();  
                        }

                        function updateTotal() {
                            var total = 0;
                            $(".input-group1:visible").each(function () {
                                var cost = parseFloat($(this).find(".total-cost").val());
                                if (!isNaN(cost)) {
                                    total += cost;
                                }
                            });

                            $("#Total").val(total.toFixed(2));
                        }
                    </script>
                    <script>
                        function validateForm() {
                            var isValid = true;
                            $(".input-group1").each(function () {
                                var productName = $(this).find(".product-autocomplete").val();
                                var unitCost = $(this).find(".unit-cost").val();
                                var quantity = $(this).find(".quantity").val();

                                if (productName === "" || unitCost === "" || quantity === "") {
                                    isValid = false;
                                    return false; 
                                }
                            });

                            return isValid;
                        }

                        function validateCurrentRow(currentRow) {
                            var productName = currentRow.find(".product-autocomplete").val();
                            var unitCost = currentRow.find(".unit-cost").val();
                            var quantity = currentRow.find(".quantity").val();
                            if (productName === "" || unitCost === "" || quantity === "") {
                                return false;
                            }
                            return true;
                        }
                        $(document).ready(function () {
                            attachAutocomplete($("#inputRowWrapper .input-group1:first"));
                            $("#inputRowWrapper").on("input", ".unit-cost, .quantity", function () {
                                calculateTotalCost($(this).closest(".input-group1"));
                            });
                            updateTotal();
                            function updateButtonVisibility() {
                                var rows = $(".input-group1");
                                rows.find(".add-row").hide();  
                                rows.find(".remove-row").show();  
                                rows.first().find(".add-row").show();
                                rows.first().find(".remove-row").hide();
                            }
                            $(document).on("click", ".add-row", function () {
                                var isValidRow = validateCurrentRow($(this).closest(".input-group1"));

                                if (isValidRow) {
                                    var newRow = $(this).closest(".input-group1").clone();
                                    newRow.find("input").val("");  
                                    $(this).closest(".input-group1").before(newRow);
                                    attachAutocomplete(newRow);
                                    newRow.find(".unit-cost, .quantity").on("input", function () {
                                        calculateTotalCost($(this).closest(".input-group1"));
                                    });
                                    newRow.find(".remove-row").show();
                                    newRow.find(".add-row").hide();
                                    updateButtonVisibility();
                                } else {
                                    alert("Please enter data in the current row before adding a new row.");
                                }
                            });
                            updateButtonVisibility();

                            $(document).on("click", ".delete-row", function () {
                                var $row = $(this).closest(".input-group1");
                                var productName = $row.find(".product-autocomplete").val();
                                var totalCost = parseFloat($row.find(".total-cost").val());  
                                removeProductName(productName, totalCost);  

                                var rowindex = $row.index();
                                var rowCount = $(".input-group1").length;

                                if (rowCount === 1) {
                                } else if (rowindex === 0) {
                                    $row.remove();

                                    var newFirstRow = $(".input-group1:first");
                                    newFirstRow.find(".add-row").show();
                                } else {
                                    $row.remove();
                                    updateTotal();  
                                    updateButtonVisibility();  
                                }
                            });
                            $("#purchaseOrderForm").submit(function () {
                                return validateForm();
                            });
                        });
                    </script>
                    <script>
                        var currentDate = new Date().toISOString().split('T')[0];
                        document.getElementById("expectedDateInput").min = currentDate;
                    </script>
                    <script>
                        var currentDate = new Date().toISOString().split('T')[0];
                        document.getElementById("purchaseOrderDateInput").min = currentDate;
                    </script>
                    @{
                        await Html.RenderPartialAsync("_ValidationScriptsPartial");
                    }
                }

            </div>
        </div>
    </div>
</body>